/*
Algorithm: GCD type.
Details: Finding Greatest Divisor of an array(integer) which leaves same reminder for all array elements.
UVA: 10407

*/

#include<stdio.h>
#include<math.h>

/*Code for GCD*/
int gcd(int a ,int b)
{
    int temp,d;
    if(a==0) return b;
    if(b==0) return a;
    if(a<b){
        temp=a;
        a=b;
        b=temp;
    }
    int r=a%b;
    return   gcd(b,r);
}
  int main()
  {
      int a[1001],d=0,i,j,b[1000],n;

      while(scanf("%d",&a[0])==1 && a[0]!=0){



         i=1;
      while(scanf("%d",&a[i])){
          if(a[i]==0)
            break;
            i++;
        }

/* Subtract 1st element from others */
      for(j=0; j<i; j++){
          b[j]=abs(a[j]-a[0]);
        }

/*Checking GCD for all*/
      int p=b[0];

        for(i=1; i<j; i++){
            p=(gcd(p,b[i]));
        }
       printf("%d\n",p);
      }
      return 0;
  }

